{"version":3,"sources":["data-api-converter/ConverterPage.js","components/analysis/AnalysisPage.js","components/SingleInput.js","components/MultiselectWithDataAdd.js","components/data-modifier-page/DateInput.js","components/data-modifier-page/Inputs.js","components/data-modifier-page/VideoDetailsModifier.js","components/data-modifier-page/DataModifierPage.js","App.js","components/Navbar.js","config/keys.js","data/consts.js","reportWebVitals.js","index.js","contexts/VideosDataContext.js","data/new-data.js","functions/createVideoImageUrl.js","components/MatMultiselect.js","components/ItemSelect.js","components/Filters.js","components/MainResult.js","components/SingleResult.js","components/Results.js","components/Page.js"],"names":["useStyles","makeStyles","theme","root","marginTop","display","flexDirection","ConverterPage","classes","urls","data","map","item","url","useState","input","setInput","usedUrls","setUsedUrls","result","setResult","convert","resultConverted","JSON","parse","items","flat","sort","a","b","snippet","publishedAt","value","index","existing","urlToCheck","id","find","filter","checkIfExists","getNewEmptyVideoObject","episodeName","title","description","releaseDate","date","dateObj","Date","UTC","getFullYear","getMonth","getDate","convertReleaseDate","stringify","className","onClick","style","width","multiline","label","onChange","e","target","InputProps","readOnly","container","height","maxHeight","AnalysisPage","ReactGA","pageview","videoData","useVideoData","getFieldByAppearanceData","field","videos","reduce","word","Object","keys","key","name","count","Consumer","text","valueField","argumentField","SingleInput","props","datum","fieldName","setDatum","emitNewValue","useEffect","flexGrow","TextField","maxRows","event","trimmedValue","replace","MenuProps","PaperProps","ITEM_HEIGHT","minWidth","addSection","alignItems","addValueTextField","addValueSection","button","MultiselectWithDataAdd","array","emitValuesChange","videosData","selectedOptions","setSelectedOptions","showAdd","setShowAdd","textFieldValue","setTextFieldValue","countMap","flatMap","acc","curr","onlyUnique","self","indexOf","episode","selectableValues","setSelectableValues","handleAdd","newValue","InputLabel","Select","labelId","multiple","select","Input","renderValue","selected","join","MenuItem","Checkbox","checked","ListItemText","primary","IconButton","color","size","datapoint","onKeyDown","keyDownEvent","keyCode","Button","variant","DateInput","convertTimestamp","timestamp","toLocaleDateString","year","month","day","error","setError","utcMidnightDate","getUTCFullYear","getUTCMonth","getUTCDate","Number","isNaN","inputs","marginBottom","inputHorizontal","singleInput","Inputs","inputObject","stringFields","stringArrays","inputObjectChanged","dateFieldName","postProcesses","object","setObject","React","open","setOpen","handleChange","has","get","areEqual","assign","val1","val2","handleClose","reason","singleInputIndex","alt","src","createVideoImageUrl","titleArray","split","length","titles","trim","handleProcessTitles","contextValue","arrayName","Snackbar","autoHideDuration","onClose","Alert","severity","sx","accordionDetails","formContainer","card","padding","jsonRenderContainer","backgroundColor","border","marginRight","textAlign","whiteSpace","detailsContainer","alignSelf","paddingLeft","buttonIcon","addMovieButton","margin","accordionSummary","progress","VideoDetailsModifier","notMandatoryFields","objectArrays","movieInfoStringFields","fieldNameToPostProcess","Map","onVideoSave","deleteVideo","activeIndexChanged","activeIndex","video","setVideo","hasChanged","setHasChanged","isExpanded","setIsExpanded","setProgress","expandedMovieIndex","setExpandedMovieIndex","calculateProgress","calculateProgressForFields","fields","counter","includes","total","Math","round","Accordion","expanded","AccordionSummary","expandIcon","background","calculatePercentageStyle","preventDefault","stopPropagation","Typography","handleDelete","AccordionDetails","Paper","xl","xs","Box","output","movieInfo","onNestedInputObjectChange","moviesArray","arrayCopy","splice","handleMovieDelete","push","getNewEmptyMovieObject","handleAddMovie","mainContainer","marginLeft","videoModifiers","buttonsContainer","justifyContent","addVideoButton","boxShadow","DataModifierPage","inputFile","useRef","setActiveIndex","current","click","reader","FileReader","onload","setVideosData","readAsText","files","type","ref","getTime","Blob","csvURL","window","URL","createObjectURL","tempLink","document","createElement","href","setAttribute","movie","changeActiveIndex","onDeleteVideoCLicked","emptyObject","initialize","Buffer","from","Keys","toString","App","location","pathname","search","exact","path","navbar","flexBalancer","flex","links","right","lineHeight","menuButton","link","menuLink","textDecoration","textColor","menuItem","Navbar","isMobile","setIsMobile","handleResize","console","log","innerWidth","addEventListener","anchorEl","setAnchorEl","Boolean","currentTarget","MenuListProps","to","paddingRight","borderRadius","GOOGLE_TRACKING_ID","EpisodeSeries","BestOfTheWorst","Members","JAY","MIKE","RICH","JESS","JOSH","JACK","SubSeries","DEFAULT","WHEEL_OF_THE_WORST","WHEEL_OF_MISFORTUNE","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","VideoDataContext","createContext","v","Provider","VideoDataProvider","children","setVideos","videosToSet","useContext","json","require","EMPTY_MOVIE_OBJECT","technology","studio","EMPTY_VIDEO_OBJECT","members","guests","subtitle","editors","moviesData","parts","MatMultiselect","filterType","onSelect","setSelected","episodes","every","selection","options","change","ItemSelect","handleOpen","setOptions","createOptions","videoId","item1","item2","onOpen","selectedMovieInternalId","selectedMovieId","option","filteredItems","selectedItemChanged","searched","filteredOptions","toLowerCase","onSearchChanged","accordion","Filters","episodesData","media","objectFit","maxWidth","details","detail","MainResult","showDetails","setShowDetails","Card","CardActionArea","chosenVideo","CardMedia","image","CardContent","gutterBottom","component","CardActions","SingleResult","Results","results","chosen","setChosen","floor","random","clone","x","i","j","shuffleArray","content","flexWrap","paddingTop","filterContainer","process","Page","setResults","resultsEpsodes","setResultsEpsodes"],"mappings":"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","file":"static/js/main.ef7c1888.chunk.js","sourcesContent":["import { Button, TextField } from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { data, getNewEmptyVideoObject } from \"data/new-data\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 10,\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\nconst ConverterPage = () => {\n  const classes = useStyles();\n  const urls = data.map((item) => item.url);\n\n  const [input, setInput] = useState(\"\");\n  const [usedUrls, setUsedUrls] = useState(data.map((item) => item.url));\n  const [result, setResult] = useState(\"\");\n\n  const handleConvert = () => {\n    setResult(convert(input));\n  };\n\n  const checkIfExists = (item) => {\n    const urlToCheck = `https://www.youtube.com/watch?v=${item.id}`;\n    const existing = urls.find((url) => url === urlToCheck);\n    if (existing) {\n      setUsedUrls(usedUrls.filter((url) => url === urlToCheck));\n      return data.find((item) => item.url === urlToCheck);\n    }\n    return null;\n  };\n\n  const convertReleaseDate = (date) => {\n    const dateObj = new Date(date.value);\n\n    return Date.UTC(\n      dateObj.getFullYear(),\n      dateObj.getMonth(),\n      dateObj.getDate(),\n      0,\n      0,\n      0\n    );\n  };\n\n  const convert = (input) => {\n    const inputJson = JSON.parse(input);\n\n    const sorted = inputJson\n      .map((item) => item.items)\n      .flat()\n      .sort((a, b) => {\n        return a.snippet.publishedAt.value - b.snippet.publishedAt.value;\n      });\n\n    const resultConverted = sorted\n      .map((item, index) => {\n        item.index = index;\n        return item;\n      })\n      .map((item) => {\n        let existing = checkIfExists(item);\n        if (existing) {\n          return existing;\n        }\n        existing = getNewEmptyVideoObject();\n\n        existing.id = item.index + 1;\n        existing.episodeName = item.snippet.title;\n        existing.description = item.snippet.description;\n        existing.releaseDate = convertReleaseDate(item.snippet.publishedAt);\n        existing.url = `https://www.youtube.com/watch?v=${item.id}`;\n\n        return existing;\n      });\n    return JSON.stringify(resultConverted, null, 2);\n  };\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Button onClick={handleConvert}>Convert</Button>\n      <div>\n        <TextField\n          style={{ width: \"50%\" }}\n          value={input}\n          multiline\n          label=\"Input\"\n          onChange={handleInputChange}\n        />\n\n        <TextField\n          InputProps={{\n            readOnly: true,\n          }}\n          style={{ width: \"50%\" }}\n          value={result}\n          multiline\n          label=\"Output\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ConverterPage;\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport ReactGA from \"react-ga\";\n\nimport {\n  Chart,\n  Legend,\n  PieSeries,\n  Title,\n  Tooltip,\n} from \"@devexpress/dx-react-chart-material-ui\";\nimport { HoverState, EventTracker } from \"@devexpress/dx-react-chart\";\nimport { useVideoData, VideoDataContext } from \"contexts/VideosDataContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: \"100%\",\n    width: \"100%\",\n    display: \"flex\",\n    \"& >*\": {\n      width: \"50%\",\n      maxHeight: \"300px\",\n    },\n  },\n}));\nconst AnalysisPage = () => {\n  ReactGA.pageview(\"/analysis\");\n  const classes = useStyles();\n  const videoData = useVideoData();\n\n  const getFieldByAppearanceData = (field) => {\n    const result = videoData.videos\n      .map((videoData) => videoData[field])\n      .flat()\n      .reduce((map, word) => {\n        if (word in map) {\n          map[word]++;\n        } else {\n          map[word] = 1;\n        }\n        return map;\n      }, {});\n\n    return Object.keys(result)\n      .map((key) => {\n        const name = key;\n        const count = result[key];\n        return { name, count };\n      })\n      .sort((a, b) => b.count - a.count);\n  };\n\n  const getGuestsByAppearanceData = () => {\n    const result = videoData.videos\n      .map((videoData) => videoData.guests)\n      .flat()\n      .reduce((map, word) => {\n        if (word in map) {\n          map[word]++;\n        } else {\n          map[word] = 1;\n        }\n        return map;\n      }, {});\n\n    return Object.keys(result)\n      .map((key) => {\n        const name = key;\n        const count = result[key];\n        return { name, count };\n      })\n      .sort((a, b) => b.count - a.count);\n  };\n\n  return (\n    <VideoDataContext.Consumer>\n      {() => (\n        <span>\n          <Box className={classes.container}>\n            <Chart data={getFieldByAppearanceData(\"members\")}>\n              <Title text=\"Member appearance by count\" />\n              <PieSeries valueField=\"count\" argumentField=\"name\" name=\"name\" />\n              <Legend />\n              <EventTracker />\n              <HoverState />\n              <Tooltip />\n            </Chart>\n            <Chart data={getFieldByAppearanceData(\"guests\")}>\n              <Title text=\"Guest appearance by count\" />\n              <PieSeries valueField=\"count\" argumentField=\"name\" name=\"name\" />\n              <Legend />\n              <EventTracker />\n              <HoverState />\n              <Tooltip />\n            </Chart>\n          </Box>\n        </span>\n      )}\n    </VideoDataContext.Consumer>\n  );\n};\n\nexport default AnalysisPage;\n","import React, { useState, useEffect } from \"react\";\nimport { TextField } from \"@mui/material\";\n\nconst SingleInput = (props) => {\n  const [datum, setDatum] = useState(props.datum[props.fieldName]);\n  const { emitNewValue, fieldName } = props;\n\n  useEffect(() => {\n    setDatum(props.datum[props.fieldName]);\n  }, [props]);\n\n  const handleChange = (event) => {\n    const trimmedValue = event.target.value.replace(/\\n$/, \"\");\n    setDatum(trimmedValue);\n    emitNewValue(trimmedValue);\n  };\n\n  return (\n    <div style={{ flexGrow: 1 }}>\n      <TextField\n        style={{ width: \"100%\" }}\n        value={datum}\n        multiline\n        maxRows={3}\n        onChange={handleChange}\n        label={fieldName}\n      />\n    </div>\n  );\n};\n\nexport default SingleInput;\n","import {\n  Button,\n  Checkbox,\n  IconButton,\n  Input,\n  InputLabel,\n  ListItemText,\n  MenuItem,\n  Select,\n  TextField,\n} from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport React, { useEffect, useState } from \"react\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    minWidth: \"50%\",\n  },\n  addSection: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  addValueTextField: {\n    flexGrow: 1,\n  },\n  addValueSection: { flexGrow: 1, display: \"flex\", alignItems: \"center\" },\n  button: {\n    maxHeight: 36,\n  },\n}));\n\nconst MultiselectWithDataAdd = (props) => {\n  const classes = useStyles();\n  const { array, title, emitValuesChange, videosData } = props;\n  const [selectedOptions, setSelectedOptions] = useState(array);\n  const [showAdd, setShowAdd] = useState(false);\n  const [textFieldValue, setTextFieldValue] = useState(\"\");\n\n  const countMap = videosData\n    .flatMap((datum) => datum[title])\n    .reduce((acc, curr) => {\n      if (acc[curr]) {\n        acc[curr]++;\n      } else {\n        acc[curr] = 1;\n      }\n      return acc;\n    }, {});\n\n  const onlyUnique = (value, index, self) => {\n    return self.indexOf(value) === index;\n  };\n\n  const gatherSelectableValues = () => {\n    return videosData\n      .map((episode) => episode[title])\n      .flat()\n      .filter(onlyUnique)\n      .sort((a, b) => countMap[b] - countMap[a]);\n  };\n\n  const [selectableValues, setSelectableValues] = useState(\n    gatherSelectableValues()\n  );\n\n  useEffect(() => {\n    setSelectableValues(\n      [...selectableValues, ...selectedOptions].filter(onlyUnique)\n    );\n    // TODO figure out how to prevent this propagation on first run\n    emitValuesChange(selectedOptions);\n  }, [selectedOptions]);\n\n  const handleChange = (select) => {\n    setSelectedOptions(select.target.value);\n  };\n\n  const handleKeyDown = (keyDownEvent) => {\n    if (keyDownEvent.keyCode === 13) {\n      handleAdd();\n    }\n  };\n\n  const handleAddDatapoint = (datapoint) => {\n    setTextFieldValue(datapoint.target.value);\n  };\n\n  const handleAdd = () => {\n    const newValue = textFieldValue;\n    setSelectedOptions([...selectedOptions, newValue]);\n    setTextFieldValue(\"\");\n    setShowAdd(false);\n  };\n\n  const handleShowAddButton = () => {\n    setShowAdd(!showAdd);\n  };\n\n  return (\n    <div className={classes.container}>\n      <InputLabel id=\"demo-mutiple-checkbox-label\">{title}</InputLabel>\n      <Select\n        labelId=\"demo-mutiple-checkbox-label\"\n        id=\"demo-mutiple-checkbox\"\n        multiple\n        value={selectedOptions || []}\n        onChange={handleChange}\n        input={<Input />}\n        renderValue={(selected) => selected.join(\", \")}\n        MenuProps={MenuProps}\n      >\n        {selectableValues &&\n          selectableValues.map((item, index) => (\n            <MenuItem value={item} key={index}>\n              <Checkbox checked={(selectedOptions || []).indexOf(item) > -1} />\n              <ListItemText primary={item} />\n            </MenuItem>\n          ))}\n      </Select>\n      <div className={classes.addSection}>\n        <div onClick={handleShowAddButton}>\n          <IconButton color=\"secondary\" aria-label=\"Add new value\" size=\"large\">\n            <AddIcon />\n          </IconButton>\n        </div>\n        {showAdd && (\n          <div className={classes.addValueSection}>\n            <TextField\n              onChange={handleAddDatapoint}\n              id=\"standard-basic\"\n              value={textFieldValue}\n              onKeyDown={handleKeyDown}\n              className={classes.addValueTextField}\n              label=\"Add value\"\n            />\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleAdd}\n              className={classes.button}\n            >\n              Add\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MultiselectWithDataAdd;\n","import React, { useState } from \"react\";\n\nimport { TextField } from \"@mui/material\";\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\nconst SUPPORTED_LOCALE = \"en-US\";\nconst DateInput = (props) => {\n  const { emitNewValue, fieldName } = props;\n\n  const convertTimestamp = (timestamp) => {\n    const options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n    };\n    const date = new Date(timestamp);\n\n    return date.toLocaleDateString(SUPPORTED_LOCALE, options);\n  };\n\n  const [datum, setDatum] = useState(\n    convertTimestamp(props.datum[props.fieldName])\n  );\n\n  const [error, setError] = useState(false);\n\n  const handleChange = (event) => {\n    const date = new Date(Date.parse(event.target.value));\n    const utcMidnightDate = Date.UTC(\n      date.getUTCFullYear(),\n      date.getUTCMonth(),\n      date.getUTCDate(),\n      0,\n      0,\n      0\n    );\n\n    if (Number.isNaN(utcMidnightDate)) {\n      setError(true);\n    } else {\n      setError(false);\n      setDatum(convertTimestamp(utcMidnightDate));\n      emitNewValue(utcMidnightDate);\n    }\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <TextField\n        style={{ flexGrow: 1 }}\n        value={datum}\n        error={error}\n        onChange={handleChange}\n        label={fieldName}\n      />\n    </div>\n  );\n};\n\nexport default DateInput;\n","import React, { useState, useEffect } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport SingleInput from \"components/SingleInput\";\nimport MultiselectWithDataAdd from \"components/MultiselectWithDataAdd\";\nimport DateInput from \"./DateInput\";\nimport { VideoDataContext } from \"contexts/VideosDataContext\";\nimport { createVideoImageUrl } from \"functions/createVideoImageUrl\";\nimport { Alert, Button, Snackbar } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n\n  inputs: {\n    width: \"100%\",\n    \"& >*\": {\n      marginBottom: 8,\n    },\n  },\n  inputHorizontal: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  singleInput: {\n    flexGrow: 1,\n  },\n}));\n\nconst Inputs = (props) => {\n  const classes = useStyles();\n  const {\n    inputObject,\n    stringFields,\n    stringArrays,\n    inputObjectChanged,\n    dateFieldName,\n    postProcesses,\n  } = props;\n  const [object, setObject] = useState(inputObject);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (newValue, datum, fieldName) => {\n    if (postProcesses && postProcesses.has(fieldName)) {\n      newValue = postProcesses.get(fieldName)(newValue);\n    }\n    if (areEqual(datum[fieldName], newValue)) return;\n    datum[fieldName] = newValue;\n    setObject(Object.assign({}, datum));\n\n    inputObjectChanged(object);\n  };\n\n  const areEqual = (val1, val2) => {\n    return JSON.stringify(val1) === JSON.stringify(val2);\n  };\n\n  const handleProcessTitles = (title, datum, fieldName) => {\n    // split the title with colon\n    const titleArray = title.split(\":\");\n    if (titleArray.length < 2) {\n      setOpen(true);\n      return;\n    }\n\n    const titles = titleArray[1]\n      .split(/,| and /)\n      .filter((title) => title)\n      .map((title) => title.trim())\n      .map((title) => {\n        return {\n          title,\n        };\n      });\n\n    datum[fieldName] = titles;\n    setObject(Object.assign({}, datum));\n    inputObjectChanged(object);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.inputs}>\n      {(stringFields || []).map((fieldName, singleInputIndex) => (\n        <div className={classes.inputHorizontal}>\n          <SingleInput\n            key={singleInputIndex}\n            datum={object}\n            fieldName={fieldName}\n            emitNewValue={(newValue) => {\n              handleChange(newValue, object, fieldName);\n            }}\n          ></SingleInput>\n          {fieldName === \"url\" && object[fieldName] ? (\n            <img\n              key={singleInputIndex + \"image\"}\n              alt=\"\"\n              className={\"video-image-small\"}\n              src={createVideoImageUrl(object[fieldName])}\n            ></img>\n          ) : (\n            \"\"\n          )}\n          {fieldName === \"episodeName\" && object[fieldName] ? (\n            <Button\n              key={singleInputIndex + \"button\"}\n              size=\"small\"\n              color=\"primary\"\n              onClick={() =>\n                handleProcessTitles(object[fieldName], object, \"moviesData\")\n              }\n            >\n              (R)\n            </Button>\n          ) : (\n            \"\"\n          )}\n        </div>\n      ))}\n      {dateFieldName ? (\n        <DateInput\n          key={dateFieldName}\n          datum={object}\n          fieldName={dateFieldName}\n          emitNewValue={(newValue) => {\n            handleChange(newValue, object, dateFieldName);\n          }}\n        ></DateInput>\n      ) : (\n        \"\"\n      )}\n      <VideoDataContext.Consumer>\n        {(contextValue) => (\n          <span>\n            {(stringArrays || []).map((arrayName, index) => (\n              <MultiselectWithDataAdd\n                array={object[arrayName]}\n                title={arrayName}\n                videosData={contextValue.videos}\n                key={index}\n                emitValuesChange={(newValue) => {\n                  handleChange(newValue, object, arrayName);\n                }}\n              ></MultiselectWithDataAdd>\n            ))}\n          </span>\n        )}\n      </VideoDataContext.Consumer>\n      <Snackbar open={open} autoHideDuration={5000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\" sx={{ width: \"100%\" }}>\n          Can't resolve titties!\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default Inputs;\n","import React, { useState, useEffect } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { Button } from \"@mui/material\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport {\n  Accordion,\n  Card,\n  Box,\n  AccordionDetails,\n  AccordionSummary,\n  Typography,\n  Paper,\n} from \"@mui/material\";\nimport Inputs from \"./Inputs\";\nimport { getNewEmptyMovieObject } from \"data/new-data\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  accordionDetails: {},\n  formContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  card: {\n    padding: \"8px\",\n  },\n  jsonRenderContainer: {\n    backgroundColor: \"#dcedc8\",\n    padding: 5,\n    border: \"1px solid #aabb97\",\n    marginRight: 15,\n    \"&> pre\": {\n      textAlign: \"left\",\n      whiteSpace: \"pre-wrap\",\n    },\n  },\n  detailsContainer: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  inputs: {\n    \"& >*\": {\n      marginBottom: 8,\n    },\n  },\n  button: {\n    color: \"white\",\n  },\n  title: {\n    alignSelf: \"center\",\n    textAlign: \"left\",\n    paddingLeft: 8,\n    flexGrow: 1,\n  },\n  buttonIcon: {},\n  addMovieButton: {\n    margin: 8,\n  },\n  accordionSummary: {\n    flexDirection: \"row-reverse\",\n  },\n  progress: {\n    color: \"green\",\n  },\n}));\nconst VideoDetailsModifier = (props) => {\n  const notMandatoryFields = [\"guests\", \"subtitle\"];\n  const stringFields = [\"episodeName\", \"url\", \"subtitle\", \"description\"];\n  const dateFieldName = \"releaseDate\";\n  const stringArrays = [\"members\", \"guests\", \"editors\"];\n  const objectArrays = [\"moviesData\"];\n  const movieInfoStringFields = [\"title\", \"year\", \"technology\", \"studio\"];\n  const fieldNameToPostProcess = new Map([\n    [\"url\", (input) => input.split(\"&list=\")[0]],\n  ]);\n\n  const {\n    datum,\n    onVideoSave,\n    deleteVideo,\n    index,\n    activeIndexChanged,\n    activeIndex,\n  } = props;\n  const classes = useStyles();\n\n  const [video, setVideo] = useState(datum);\n  const [hasChanged, setHasChanged] = useState(false);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [expandedMovieIndex, setExpandedMovieIndex] = useState(-1);\n\n  useEffect(() => {\n    if (props.datum !== video) {\n      setVideo(props.datum);\n    }\n  }, [props.datum]);\n\n  useEffect(() => {\n    setProgress(calculateProgress(video));\n  }, [video]);\n\n  const handleSave = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    onVideoSave(video);\n\n    setHasChanged(false);\n  };\n\n  const onInputObjectChange = (newValue) => {\n    setVideo(newValue);\n\n    setHasChanged(true);\n  };\n\n  const onNestedInputObjectChange = (newValue, video, index, fieldName) => {\n    if (areEqual(video, newValue)) return;\n\n    video[fieldName][index] = newValue;\n\n    setVideo(Object.assign({}, video));\n    setHasChanged(true);\n  };\n\n  const handleAddMovie = (fieldName) => {\n    video[fieldName].push(getNewEmptyMovieObject());\n\n    setVideo(Object.assign({}, video));\n    setHasChanged(true);\n  };\n\n  const accordionChanged = (event, isExpanded) => {\n    activeIndexChanged(index, isExpanded);\n    setIsExpanded(isExpanded);\n  };\n\n  const areEqual = (val1, val2) => {\n    return JSON.stringify(val1) === JSON.stringify(val2);\n  };\n\n  const handleDelete = (event) => {\n    event.stopPropagation();\n    deleteVideo();\n  };\n\n  const handleMovieDelete = (event, moviesArray, index, fieldName) => {\n    event.stopPropagation();\n    const arrayCopy = [...moviesArray];\n    arrayCopy.splice(index, 1);\n    video[fieldName] = arrayCopy;\n    setVideo(Object.assign({}, video));\n  };\n\n  const calculateProgressForFields = (fields, counter) => {\n    for (let fieldName of fields.filter(\n      (fieldName) => !notMandatoryFields.includes(fieldName)\n    )) {\n      counter.total++;\n      if (video[fieldName].length > 0) {\n        counter.result++;\n      }\n    }\n  };\n\n  const calculateProgress = (video) => {\n    const counter = {\n      total: 0,\n      result: 0,\n    };\n\n    calculateProgressForFields(stringFields, counter);\n    calculateProgressForFields(stringArrays, counter);\n    calculateProgressForFields(objectArrays, counter);\n\n    if (video[dateFieldName]) {\n      counter.total++;\n      if (video[dateFieldName] !== 0) {\n        counter.result++;\n      }\n    }\n\n    return Math.round((counter.result * 100) / counter.total);\n  };\n\n  const calculatePercentageStyle = (progress) => {\n    let color = \"grey\";\n    if (progress < 60) color = \"#ffebee\";\n    if (progress >= 60 && progress < 85) color = \"#fff8e1\";\n    if (progress >= 85) color = \"#e8f5e9\";\n    return {\n      background: `linear-gradient(to right, ${color} ${progress}%, white ${\n        100 - progress\n      }%)`,\n    };\n  };\n\n  return (\n    <Accordion\n      expanded={activeIndex === index && isExpanded}\n      onChange={accordionChanged}\n    >\n      <AccordionSummary\n        className={classes.accordionSummary}\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n        style={calculatePercentageStyle(progress)}\n      >\n        {hasChanged ? (\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={handleSave}\n            className={classes.button}\n          >\n            Save changes\n          </Button>\n        ) : (\n          \"\"\n        )}\n        <Typography className={classes.title}>\n          {index + 1}. {video.episodeName} [{progress}%]\n        </Typography>\n        <Button onClick={(event) => handleDelete(event)} color=\"error\">\n          DELETE\n        </Button>\n      </AccordionSummary>\n\n      <AccordionDetails className={classes.accordionDetails}>\n        {isExpanded ? (\n          <Paper\n            className={classes.detailsContainer}\n            sx={{\n              flexDirection: { xl: \"row\", xs: \"column\" },\n            }}\n          >\n            <Box\n              className={classes.jsonRenderContainer}\n              sx={{\n                width: { xs: \"100%\", xl: \"35%\" },\n              }}\n            >\n              <pre>{JSON.stringify(video, null, 2)}</pre>\n            </Box>\n            <form style={{ width: \"100%\" }}>\n              <Box\n                className={classes.formContainer}\n                sx={{\n                  display: \"flex\",\n                  width: {\n                    xs: \"100%\",\n                  },\n                  flexDirection: {\n                    xl: \"row\",\n                    xs: \"column\",\n                  },\n                }}\n              >\n                <Box\n                  style={{ marginTop: \"6px\" }}\n                  sx={{\n                    width: {\n                      xs: \"100%\",\n                      xl: \"60%\",\n                    },\n                    marginRight: {\n                      xs: \"0px\",\n                      xl: \"2%\",\n                    },\n                  }}\n                >\n                  <Inputs\n                    inputObject={video}\n                    stringFields={stringFields}\n                    stringArrays={stringArrays}\n                    dateFieldName={dateFieldName}\n                    postProcesses={fieldNameToPostProcess}\n                    inputObjectChanged={(output) => onInputObjectChange(output)}\n                  ></Inputs>{\" \"}\n                </Box>\n                <Box\n                  sx={{\n                    width: {\n                      xs: \"100%\",\n                      xl: \"40%\",\n                    },\n                  }}\n                >\n                  {(objectArrays || []).map((fieldName, index) => (\n                    <div key={index} style={{ width: \"100%\" }}>\n                      {(video[fieldName] || []).map(\n                        (movieInfo, singleInputIndex) => (\n                          <Accordion\n                            key={singleInputIndex}\n                            expanded={expandedMovieIndex === singleInputIndex}\n                            onChange={() =>\n                              setExpandedMovieIndex(singleInputIndex)\n                            }\n                          >\n                            <AccordionSummary\n                              expandIcon={<ExpandMoreIcon />}\n                              aria-controls=\"panel1a-content\"\n                              id=\"panel1a-header\"\n                            >\n                              <Typography>\n                                {singleInputIndex + 1}. {movieInfo.title}\n                              </Typography>\n                            </AccordionSummary>\n                            <AccordionDetails\n                              className={classes.accordionDetails}\n                            >\n                              <Inputs\n                                inputObject={movieInfo}\n                                stringFields={movieInfoStringFields}\n                                inputObjectChanged={(output) =>\n                                  onNestedInputObjectChange(\n                                    output,\n                                    video,\n                                    singleInputIndex,\n                                    fieldName\n                                  )\n                                }\n                              ></Inputs>\n                              <Button\n                                onClick={(event) =>\n                                  handleMovieDelete(\n                                    event,\n                                    video[fieldName],\n                                    singleInputIndex,\n                                    fieldName\n                                  )\n                                }\n                                color=\"error\"\n                              >\n                                DELETE\n                              </Button>\n                            </AccordionDetails>\n                          </Accordion>\n                        )\n                      )}\n                      <Button\n                        size=\"small\"\n                        color=\"primary\"\n                        onClick={() => handleAddMovie(fieldName)}\n                        className={classes.addMovieButton}\n                      >\n                        Add Movie\n                        <AddIcon className={classes.buttonIcon}></AddIcon>\n                      </Button>\n                    </div>\n                  ))}\n                </Box>\n              </Box>\n            </form>\n          </Paper>\n        ) : (\n          \"\"\n        )}\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default VideoDetailsModifier;\n","import React, { useRef, useState } from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { getNewEmptyVideoObject } from \"data/new-data\";\nimport { Button } from \"@mui/material\";\nimport VideoDetailsModifier from \"./VideoDetailsModifier\";\nimport GetAppIcon from \"@mui/icons-material/GetApp\";\nimport PublishIcon from \"@mui/icons-material/Publish\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useVideoData, VideoDataContext } from \"contexts/VideosDataContext\";\nimport ReactGA from \"react-ga\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    display: \"flex\",\n  },\n  mainContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    backgroundColor: \"inherit\",\n  },\n  buttonIcon: {\n    marginLeft: 5,\n  },\n  videoModifiers: {\n    width: \"95%\",\n  },\n  buttonsContainer: {\n    marginBottom: 16,\n    marginTop: 16,\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"space-evenly\",\n  },\n  addVideoButton: {\n    padding: 12,\n    boxShadow: \"0 1px 2px rgba(0,0,0,0.34)\",\n  },\n}));\nconst DataModifierPage = () => {\n  ReactGA.pageview(\"/picker\");\n  const videoData = useVideoData();\n  let inputFile = useRef(null);\n  const [activeIndex, setActiveIndex] = useState(-1);\n\n  const classes = useStyles();\n\n  const onVideoSave = (movie, index) => {\n    const arrayCopy = [...videoData.videos];\n    arrayCopy[index] = movie;\n    videoData.setVideosData(arrayCopy);\n  };\n\n  const handleAddVideo = () => {\n    const arrayCopy = [...videoData.videos];\n    const emptyObject = getNewEmptyVideoObject();\n    emptyObject.id = arrayCopy.length + 1;\n    arrayCopy.push(emptyObject);\n    videoData.setVideosData(arrayCopy);\n  };\n\n  const handleFileSelected = (e) => {\n    e.preventDefault();\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      // @ts-ignore\n      videoData.setVideosData([...JSON.parse(e.target.result)]);\n    };\n    reader.readAsText(e.target.files[0]);\n  };\n\n  const handleDownload = () => {\n    const timestamp = new Date().getTime();\n    var data = new Blob([JSON.stringify(videoData.videos)], {\n      type: \"text/json\",\n    });\n    var csvURL = window.URL.createObjectURL(data);\n    var tempLink = document.createElement(\"a\");\n    tempLink.href = csvURL;\n    tempLink.setAttribute(\"download\", `data-${timestamp}.json`);\n    tempLink.click();\n  };\n\n  const handleUpload = () => {\n    inputFile.current.click();\n  };\n\n  const changeActiveIndex = (index, isExpanded) => {\n    if (isExpanded) {\n      setActiveIndex(index);\n    }\n  };\n\n  const onDeleteVideoCLicked = (index) => {\n    const arrayCopy = [...videoData.videos];\n    arrayCopy.splice(index, 1);\n    videoData.setVideosData(arrayCopy);\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <div className={classes.buttonsContainer}>\n        <Button color=\"secondary\" variant=\"contained\" onClick={handleUpload}>\n          Upload File\n          <PublishIcon className={classes.buttonIcon}></PublishIcon>\n          <input\n            onChange={handleFileSelected}\n            type=\"file\"\n            id=\"file\"\n            ref={inputFile}\n            style={{ display: \"none\" }}\n          />\n        </Button>\n        <Button color=\"primary\" variant=\"contained\" onClick={handleDownload}>\n          Download File\n          <GetAppIcon className={classes.buttonIcon}></GetAppIcon>\n        </Button>\n      </div>\n      <VideoDataContext.Consumer>\n        {() => (\n          <div className={classes.videoModifiers}>\n            {(videoData.videos || []).map((datum, index) => (\n              <VideoDetailsModifier\n                key={index}\n                datum={datum}\n                index={index}\n                activeIndex={activeIndex}\n                onVideoSave={(video) => onVideoSave(video, index)}\n                videosData={videoData.videos}\n                activeIndexChanged={(index, isExpanded) =>\n                  changeActiveIndex(index, isExpanded)\n                }\n                deleteVideo={() => onDeleteVideoCLicked(index)}\n              ></VideoDetailsModifier>\n            ))}\n          </div>\n        )}\n      </VideoDataContext.Consumer>\n      <Button\n        style={{ margin: \"16px\", padding: \"8px\" }}\n        size=\"small\"\n        color=\"primary\"\n        onClick={handleAddVideo}\n        className={classes.addVideoButton}\n      >\n        Add Video\n        <AddIcon className={classes.buttonIcon}></AddIcon>\n      </Button>\n    </div>\n  );\n};\n\nexport default DataModifierPage;\n","import React, { useEffect } from \"react\";\nimport Page from \"components/Page\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  withRouter,\n} from \"react-router-dom\";\nimport Navbar from \"components/Navbar\";\nimport DataModifierPage from \"components/data-modifier-page/DataModifierPage\";\nimport ConverterPage from \"data-api-converter/ConverterPage\";\nimport { VideoDataProvider } from \"contexts/VideosDataContext\";\nimport AnalysisPage from \"components/analysis/AnalysisPage\";\nimport ReactGA from \"react-ga\";\nimport { Keys } from \"./config/keys\";\n\nReactGA.initialize(Buffer.from(Keys[\"GOOGLE_TRACKING_ID\"]).toString());\nfunction App() {\n  useEffect(() => {\n    // This line will trigger on a route change\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  });\n\n  return (\n    <VideoDataProvider>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Page />\n              </Route>\n              <Route exact path=\"/picker\">\n                <Page />\n              </Route>\n              <Route exact path=\"/RLMPicker/picker\">\n                <Page />\n              </Route>\n              <Route exact path=\"/RLMPicker\">\n                <Page />\n              </Route>\n              <Route exact path=\"/modify-data\">\n                <DataModifierPage />\n              </Route>\n              <Route exact path=\"/RLMPicker/modify-data\">\n                <DataModifierPage />\n              </Route>\n              <Route exact path=\"/converter\">\n                <ConverterPage />\n              </Route>\n              <Route exact path=\"/RLMPicker/converter\">\n                <ConverterPage />\n              </Route>\n              <Route exact path=\"/anal\">\n                <AnalysisPage />\n              </Route>\n              <Route exact path=\"/RLMPicker/anal\">\n                <AnalysisPage />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </VideoDataProvider>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { Box, IconButton, Menu, MenuItem } from \"@mui/material\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport BarChartIcon from \"@mui/icons-material/BarChart\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport AutoAwesomeIcon from \"@mui/icons-material/AutoAwesome\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  navbar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: 80,\n    boxShadow: \"1px 3px 5px rgba(0, 0, 0, 0.1)\",\n    backgroundColor: \"white\",\n  },\n  flexBalancer: {\n    flex: 1,\n  },\n  links: {\n    display: \"flex\",\n    alignItems: \"center\",\n    right: 0,\n    lineHeight: \"40px\",\n    flex: 1,\n    justifyContent: \"flex-end\",\n    \"& > *\": {\n      marginRight: 10,\n      padding: \"0 8px\",\n    },\n  },\n  menuButton: {\n    display: \"flex\",\n    alignItems: \"center\",\n    lineHeight: \"40px\",\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n  link: {\n    whiteSpace: \"nowrap\",\n  },\n  menuLink: {\n    textDecoration: \"none\",\n    textColor: \"black\",\n    color: \"black\",\n  },\n  menuItem: {},\n}));\nconst Navbar = () => {\n  const classes = useStyles();\n  const [isMobile, setIsMobile] = useState(false);\n\n  //choose the screen size\n  const handleResize = () => {\n    console.log(\"window.innerWidth\", window.innerWidth);\n\n    if (window.innerWidth < 720) {\n      setIsMobile(true);\n    } else {\n      setIsMobile(false);\n    }\n  };\n\n  // create an event listener\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n  });\n  // create an event listener\n  useEffect(() => handleResize(), []);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => setAnchorEl(null);\n  return (\n    <nav className={classes.navbar}>\n      <div className={classes.flexBalancer}></div>\n      <h1>Don't worry, I'll pick it for you</h1>\n\n      {isMobile ? (\n        <Box className={classes.menuButton}>\n          <IconButton\n            color=\"secondary\"\n            aria-label=\"Add new value\"\n            size=\"large\"\n            onClick={handleClick}\n          >\n            <MoreVertIcon />\n          </IconButton>\n\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            <Link to=\"picker\" className={classes.menuLink}>\n              <MenuItem className={classes.menuItem} onClick={handleClose}>\n                <AutoAwesomeIcon style={{ paddingRight: 3 }} />\n                Picker\n              </MenuItem>\n            </Link>\n            <Link className={classes.menuLink} to=\"/modify-data\">\n              <MenuItem className={classes.menuItem} onClick={handleClose}>\n                <EditIcon style={{ paddingRight: 3 }} />\n                Modify Data\n              </MenuItem>\n            </Link>\n            <Link className={classes.menuLink} to=\"/anal\">\n              <MenuItem className={classes.menuItem} onClick={handleClose}>\n                <BarChartIcon style={{ paddingRight: 3 }} />\n                Analysis\n              </MenuItem>\n            </Link>\n          </Menu>\n        </Box>\n      ) : (\n        <Box className={classes.links}>\n          <Link to=\"picker\" className={classes.link}>\n            Picker\n          </Link>\n          <Link\n            className={classes.link}\n            to=\"/modify-data\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#f1356d\",\n              borderRadius: \"8px\",\n            }}\n          >\n            Modify Data\n          </Link>\n          <Link\n            className={classes.link}\n            to=\"/anal\"\n            style={{\n              color: \"white\",\n              backgroundColor: \"#66bb6a\",\n              borderRadius: \"8px\",\n            }}\n          >\n            Analysis\n          </Link>\n        </Box>\n      )}\n    </nav>\n  );\n};\n\nexport default Navbar;\n","export const Keys = {\n  GOOGLE_TRACKING_ID: \"Ry00Q1FWUzRGMEQ2\",\n};\n","export const EpisodeSeries = {\n  BestOfTheWorst: \"Best Of The Worst\",\n};\n\nexport const Members = {\n  JAY: \"Jay\",\n  MIKE: \"Mike\",\n  RICH: \"Rich Evans\",\n  JESS: \"Jess\",\n  JOSH: \"Josh\",\n  JACK: \"Jack\",\n};\n\nexport const SubSeries = {\n  DEFAULT: \"\",\n  WHEEL_OF_THE_WORST: \"Wheel of the worst\",\n  WHEEL_OF_MISFORTUNE: \"Wheel of misfortune\",\n};\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { data } from \"data/new-data\";\nimport React, { createContext, useContext, useState } from \"react\";\nexport const VideoDataContext = createContext({\n  videos: data,\n  setVideosData: (v) => {},\n});\n\nconst { Provider } = VideoDataContext;\n\nexport const VideoDataProvider = ({ children }) => {\n  const [videos, setVideos] = useState(data);\n  const setVideosData = (videosToSet) => setVideos([...videosToSet]);\n  return <Provider value={{ videos, setVideosData }}>{children}</Provider>;\n};\n\nexport const useVideoData = () => useContext(VideoDataContext);\n","// @ts-ignore\nvar json = require(\"./data-1639914279550.json\");\n\nconst { Members } = require(\"./consts\");\n// Since I always keep it open - a few snippets to keep in mind:\n// imr - import react\n// usf useState\n// uef - useEffect\n\nconst EMPTY_MOVIE_OBJECT = {\n  title: \"\",\n  year: \"\",\n  technology: \"\",\n  studio: \"\",\n};\n\nexport const getNewEmptyMovieObject = () => {\n  return JSON.parse(JSON.stringify(EMPTY_MOVIE_OBJECT));\n};\n\nconst EMPTY_VIDEO_OBJECT = {\n  id: \"\",\n  episodeName: \"\",\n  url: \"\",\n  members: [],\n  guests: [],\n  subtitle: \"\",\n  releaseDate: 0,\n  editors: [],\n  description: \"\",\n  moviesData: [],\n};\n\nexport const getNewEmptyVideoObject = () => {\n  return JSON.parse(JSON.stringify(EMPTY_VIDEO_OBJECT));\n};\n\nexport const data = json;\n","export const createVideoImageUrl = (url) => {\n  const parts = url.split(\"/\");\n  const id = parts[parts.length - 1].split(\"=\")[1];\n  return `https://img.youtube.com/vi/${id}/0.jpg`;\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nconst MatMultiselect = (props) => {\n  const { data, filterType, onSelect, title } = props;\n  const [selected, setSelected] = useState([]);\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  useEffect(() => {\n    const episodes = data.filter((episode) =>\n      selected.every((selection) => episode[filterType].includes(selection))\n    );\n\n    onSelect(episodes);\n  }, [selected]);\n\n  const options = (data || [])\n    .flatMap((datum) => datum[filterType])\n    .filter((datum) => !!datum)\n    .filter((datum, index, array) => array.indexOf(datum) === index)\n    .map((datum) => {\n      return {\n        name: datum,\n      };\n    });\n\n  const handleChange = (change) => {\n    setSelected(change.target.value);\n  };\n\n  return (\n    <div className=\"multiselect-container\">\n      <InputLabel id=\"demo-mutiple-checkbox-label\">{title}</InputLabel>\n      <Select\n        labelId=\"demo-mutiple-checkbox-label\"\n        id=\"demo-mutiple-checkbox\"\n        multiple\n        value={selected}\n        onChange={handleChange}\n        input={<Input />}\n        // @ts-ignore\n        renderValue={(selected) => selected.join(\", \")}\n        MenuProps={MenuProps}\n      >\n        {options &&\n          options.map((item) => (\n            <MenuItem key={item.name} value={item.name}>\n              <Checkbox checked={selected.indexOf(item.name) > -1} />\n              <ListItemText primary={item.name} />\n            </MenuItem>\n          ))}\n      </Select>\n    </div>\n  );\n};\n\nexport default MatMultiselect;\n","import React, { useEffect, useState } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport { InputLabel, TextField } from \"@mui/material\";\n\nconst ItemSelect = (props) => {\n  const { items, onSelect } = props;\n  const clearTitle = \"-clear-\";\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => setOpen(false);\n  const handleOpen = () => setOpen(true);\n\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    setOptions(createOptions());\n  }, [items]);\n\n  const createOptions = () => {\n    return items\n      .map((item) => {\n        return item.moviesData.map((data) => {\n          return { data, id: item.id };\n        });\n      })\n      .flat()\n      .map((item, id) => {\n        return {\n          title: item.data.title,\n          videoId: item.id,\n          id,\n        };\n      })\n      .sort((item1, item2) => {\n        if (item2.title > item1.title) return -1;\n        if (item1.title > item2.title) return 1;\n        return 0;\n      });\n  };\n\n  const selectedItemChanged = (e) => {\n    const selectedMovieInternalId = e.target.value;\n    if (selectedMovieInternalId === -1) {\n      onSelect(items);\n      return;\n    }\n    const selectedMovieId = options\n      .filter((option) => {\n        return option.id === selectedMovieInternalId;\n      })\n      .map((option) => {\n        return option.videoId;\n      })[0];\n\n    const filteredItems = items.filter((item) => {\n      return item.id === selectedMovieId;\n    });\n\n    onSelect(filteredItems);\n  };\n\n  const onSearchChanged = (e) => {\n    const searched = e.target.value;\n    const filteredOptions = createOptions().filter((option) =>\n      option.title.toLowerCase().includes(searched.toLowerCase())\n    );\n\n    setOptions(filteredOptions);\n  };\n\n  const handleKeyDown = (e) => {\n    e.stopPropagation();\n  };\n\n  return (\n    <div className=\"item-select\">\n      <InputLabel id=\"demo-simple-select-label\">Select Movie</InputLabel>\n      <Select\n        variant=\"standard\"\n        className=\"single-select\"\n        open={open}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        onChange={(e) => selectedItemChanged(e)}\n      >\n        <TextField\n          id=\"standard-basic\"\n          className=\"movie-search-input\"\n          label=\"Search...\"\n          onKeyDown={handleKeyDown}\n          onClick={handleOpen}\n          onChange={(e) => onSearchChanged(e)}\n        />\n\n        <MenuItem value={-1} key={-1}>\n          {clearTitle}\n        </MenuItem>\n        {options &&\n          options.map((movie, key) => (\n            <MenuItem value={movie.id} key={key}>\n              {movie.title}\n            </MenuItem>\n          ))}\n      </Select>\n    </div>\n  );\n};\n\nexport default ItemSelect;\n","import React from \"react\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport Accordion from \"@mui/material/Accordion\";\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\nimport Typography from \"@mui/material/Typography\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport MatMultiselect from \"./MatMultiselect\";\nimport ItemSelect from \"./ItemSelect\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  accordion: {\n    width: \"98%\",\n  },\n}));\n\nconst Filters = (props) => {\n  const classes = useStyles();\n  const { episodesData, onSelect } = props;\n\n  return (\n    <Accordion className={classes.accordion}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"panel1a-content\"\n        id=\"panel1a-header\"\n      >\n        <Typography>Filters</Typography>\n      </AccordionSummary>\n      <AccordionDetails className=\"filters-container\">\n        <MatMultiselect\n          title=\"Select Cast\"\n          data={episodesData}\n          filterType=\"members\"\n          onSelect={(e) => onSelect(e)}\n        />\n        <MatMultiselect\n          title=\"Select Guests\"\n          data={episodesData}\n          filterType=\"guests\"\n          onSelect={(e) => onSelect(e)}\n        />\n        <MatMultiselect\n          title=\"Select Editor\"\n          data={episodesData}\n          filterType=\"editors\"\n          onSelect={(e) => onSelect(e)}\n        />\n        <ItemSelect items={episodesData} onSelect={(e) => onSelect(e)} />\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default Filters;\n","import {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@mui/material\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { createVideoImageUrl } from \"functions/createVideoImageUrl\";\nimport React, { useState } from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  media: {\n    height: 360,\n    width: \"100%\",\n    objectFit: \"cover\",\n  },\n  card: {\n    maxWidth: 480,\n\n    boxShadow: \"9px 8px 4px rgb(104 97 97 / 10%)\",\n  },\n  details: {\n    marginLeft: 15,\n    marginTop: 15,\n    maxWidth: 480,\n  },\n  detail: {\n    textAlign: \"left\",\n  },\n});\n\nconst MainResult = (props) => {\n  const { episode } = props;\n\n  const [showDetails, setShowDetails] = useState(false);\n\n  const classes = useStyles();\n\n  const openVideoUrl = (chosenVideo) => {\n    window.open(chosenVideo.url, \"_blank\");\n  };\n\n  const handleShowDetails = () => {\n    setShowDetails(!showDetails);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Card className={classes.card}>\n        <CardActionArea onClick={() => openVideoUrl(episode)}>\n          <CardMedia\n            className={classes.media}\n            image={createVideoImageUrl(episode.url)}\n            title=\"botw-image\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {episode.episodeName}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {episode.description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Another!\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={handleShowDetails}>\n            {showDetails ? \"Hide details\" : \"Learn More\"}\n          </Button>\n        </CardActions>\n      </Card>\n      {showDetails ? (\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          <div className={classes.details}>\n            <div className={classes.detail}>Editors: {episode.editors}</div>\n            <div className={classes.detail}>\n              Released: {new Date(episode.releaseDate).toLocaleDateString()}\n            </div>\n            <div className={classes.detail}>\n              Movies:{\" \"}\n              {episode.moviesData\n                .map((movie) => `${movie.title} (${movie.year})`)\n                .join(\", \")}\n            </div>\n          </div>\n        </Typography>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default MainResult;\n","import { createVideoImageUrl } from \"functions/createVideoImageUrl\";\nimport React from \"react\";\n\nconst SingleResult = (props) => {\n  const { episode } = props;\n\n  const openVideoUrl = (chosenVideo) => {\n    window.open(chosenVideo.url, \"_blank\");\n  };\n\n  return (\n    <div className={\"single-result\"}>\n      <div className={\"result-cell\"}>\n        <img\n          alt=\"\"\n          onClick={() => openVideoUrl(episode)}\n          className={\"video-image\"}\n          src={createVideoImageUrl(episode.url)}\n        ></img>\n        <div className=\"title\">{episode.episodeName}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default SingleResult;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport MainResult from \"./MainResult\";\nimport SingleResult from \"./SingleResult\";\n\nconst Results = (props) => {\n  const { results } = props;\n  const [chosen, setChosen] = useState();\n\n  useEffect(() => {\n    setChosen(results[Math.floor(Math.random() * results.length)]);\n  }, [results]);\n\n  /**\n   * Shuffles the array as described in https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm\n   */\n  const shuffleArray = (array) => {\n    const clone = array.map((x) => x);\n    for (let i = clone.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [clone[i], clone[j]] = [clone[j], clone[i]];\n    }\n    return clone;\n  };\n\n  return (\n    <div className=\"all-results\">\n      {chosen && (\n        <div className=\"main-result\">\n          <MainResult episode={chosen} />\n        </div>\n      )}\n      <div className=\"results-grid\">\n        {shuffleArray(results).map((episode, index) => (\n          <SingleResult episode={episode} key={index} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n","import makeStyles from \"@mui/styles/makeStyles\";\nimport { useVideoData } from \"contexts/VideosDataContext\";\nimport React, { useEffect, useState } from \"react\";\nimport Filters from \"./Filters\";\nimport Results from \"./Results\";\nimport ReactGA from \"react-ga\";\n\nconst useStyles = makeStyles({\n  content: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingTop: 8,\n  },\n  results: {\n    margin: 5,\n  },\n  filterContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nconst omg = JSON.stringify(process.env);\n\nconst Page = () => {\n  ReactGA.pageview(\"/picker\");\n  const classes = useStyles();\n\n  const videoData = useVideoData();\n\n  const [results, setResults] = useState(videoData.videos);\n  const [resultsEpsodes, setResultsEpsodes] = useState([]);\n\n  useEffect(() => {\n    setResultsEpsodes(\n      videoData.videos.filter((episode) => results.includes(episode))\n    );\n  }, [results]);\n\n  return (\n    <div className=\"mainDiv\">\n      <div className={classes.content}>\n        <Filters\n          episodesData={videoData.videos}\n          onSelect={(e) => setResults(e)}\n        ></Filters>\n        <div className={classes.results}>\n          <Results results={resultsEpsodes} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n// Will be useful\n//https://stackoverflow.com/questions/2068344/how-do-i-get-a-youtube-video-thumbnail-from-the-youtube-api\n"],"sourceRoot":""}